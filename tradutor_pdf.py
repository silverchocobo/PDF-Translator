# -*- coding: utf-8 -*-
"""Tradutor_PDF.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15WEbEswlve7JIvD8al6RUzEaMdv0HZh5
"""

!pip install PyPDF2
!pip install googletrans==3.1.0a0
!pip install reportlab
!pip install io

from PyPDF2 import PdfReader,PdfWriter
from reportlab.pdfgen import canvas
import io
from reportlab.lib.pagesizes import letter
from reportlab.lib import colors
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import inch
from reportlab.platypus import Paragraph, SimpleDocTemplate
from googletrans import Translator

file = open('nome do pdf de entrada','rb')
reader = PdfReader(file)
numPages = reader.pages

translator = Translator()


# Criar um novo PDF
output_pdf = PdfWriter()

# Função para criar um PDF com texto formatado
def create_pdf(text, output_filename):
    doc = SimpleDocTemplate(output_filename, pagesize=letter)
    styles = getSampleStyleSheet()
    flowables = []

    # Adicionar parágrafo formatado ao PDF
    #src = idioma do texto de entrada
    #dest = idioma de saída
    #Lista de códigos de idiomas na documentação https://py-googletrans.readthedocs.io/en/latest/#googletrans-languages
    translated_text = translator.translate(text, src='pt', dest='en').text
    paragraph = Paragraph(translated_text, styles['Normal'])
    flowables.append(paragraph)

    # Construir PDF
    doc.build(flowables)

for p in range(len(numPages)):
  page = reader.pages[p]
  text = page.extract_text()

  if text:

    # Criar um PDF com texto formatado
    temp_pdf = io.BytesIO()
    create_pdf(text, temp_pdf)
    temp_pdf.seek(0)
    temp_pdf_reader = PdfReader(temp_pdf)

    # Adicionar a página traduzida ao novo PDF
    for temp_page in temp_pdf_reader.pages:
        output_pdf.add_page(temp_page)

# Salvar o novo PDF
with open('Nome do pdf de saida', 'wb') as new_pdf_file:
  output_pdf.write(new_pdf_file)